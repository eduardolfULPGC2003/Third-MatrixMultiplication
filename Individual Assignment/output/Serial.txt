"C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\Eduardo\Desktop\GCID\4º\BigData\Benchmarking\Java\jmh-project\target\test-classes;C:\Users\Eduardo\Desktop\GCID\4º\BigData\Benchmarking\Java\jmh-project\target\classes;C:\Users\Eduardo\.m2\repository\org\openjdk\jmh\jmh-core\1.35\jmh-core-1.35.jar;C:\Users\Eduardo\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Eduardo\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\Eduardo\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.35\jmh-generator-annprocess-1.35.jar org.openjdk.jmh.Main "org.example.MatrixMultiplicationBenchmarking.*"
# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 1)

# Run progress: 0.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 3.03% complete, ETA 00:05:45
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 6.06% complete, ETA 00:05:33
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  ≈ 10⁻⁴ ms/op


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 2)

# Run progress: 9.09% complete, ETA 00:05:21
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 12.12% complete, ETA 00:05:11
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 15.15% complete, ETA 00:05:00
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  ≈ 10⁻⁴ ms/op


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 4)

# Run progress: 18.18% complete, ETA 00:04:49
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 21.21% complete, ETA 00:04:38
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 24.24% complete, ETA 00:04:28
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  ≈ 10⁻⁴ ms/op


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 8)

# Run progress: 27.27% complete, ETA 00:04:17
# Fork: 1 of 3
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op

# Run progress: 30.30% complete, ETA 00:04:06
# Fork: 2 of 3
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op

# Run progress: 33.33% complete, ETA 00:03:55
# Fork: 3 of 3
# Warmup Iteration   1: 0.001 ms/op
# Warmup Iteration   2: 0.001 ms/op
# Warmup Iteration   3: 0.001 ms/op
# Warmup Iteration   4: 0.001 ms/op
# Warmup Iteration   5: 0.001 ms/op
Iteration   1: 0.001 ms/op
Iteration   2: 0.001 ms/op
Iteration   3: 0.001 ms/op
Iteration   4: 0.001 ms/op
Iteration   5: 0.001 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  0.001 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 16)

# Run progress: 36.36% complete, ETA 00:03:45
# Fork: 1 of 3
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.003 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op

# Run progress: 39.39% complete, ETA 00:03:34
# Fork: 2 of 3
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.003 ms/op
# Warmup Iteration   4: 0.003 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.003 ms/op
Iteration   2: 0.003 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.003 ms/op
Iteration   5: 0.003 ms/op

# Run progress: 42.42% complete, ETA 00:03:23
# Fork: 3 of 3
# Warmup Iteration   1: 0.004 ms/op
# Warmup Iteration   2: 0.004 ms/op
# Warmup Iteration   3: 0.004 ms/op
# Warmup Iteration   4: 0.004 ms/op
# Warmup Iteration   5: 0.004 ms/op
Iteration   1: 0.004 ms/op
Iteration   2: 0.004 ms/op
Iteration   3: 0.004 ms/op
Iteration   4: 0.004 ms/op
Iteration   5: 0.004 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  0.004 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 32)

# Run progress: 45.45% complete, ETA 00:03:12
# Fork: 1 of 3
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.023 ms/op
# Warmup Iteration   3: 0.025 ms/op
# Warmup Iteration   4: 0.026 ms/op
# Warmup Iteration   5: 0.026 ms/op
Iteration   1: 0.026 ms/op
Iteration   2: 0.026 ms/op
Iteration   3: 0.026 ms/op
Iteration   4: 0.026 ms/op
Iteration   5: 0.026 ms/op

# Run progress: 48.48% complete, ETA 00:03:02
# Fork: 2 of 3
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.023 ms/op
# Warmup Iteration   3: 0.025 ms/op
# Warmup Iteration   4: 0.023 ms/op
# Warmup Iteration   5: 0.023 ms/op
Iteration   1: 0.023 ms/op
Iteration   2: 0.023 ms/op
Iteration   3: 0.023 ms/op
Iteration   4: 0.023 ms/op
Iteration   5: 0.023 ms/op

# Run progress: 51.52% complete, ETA 00:02:51
# Fork: 3 of 3
# Warmup Iteration   1: 0.024 ms/op
# Warmup Iteration   2: 0.023 ms/op
# Warmup Iteration   3: 0.025 ms/op
# Warmup Iteration   4: 0.024 ms/op
# Warmup Iteration   5: 0.024 ms/op
Iteration   1: 0.024 ms/op
Iteration   2: 0.024 ms/op
Iteration   3: 0.024 ms/op
Iteration   4: 0.023 ms/op
Iteration   5: 0.024 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  0.024 ±(99.9%) 0.002 ms/op [Average]
  (min, avg, max) = (0.023, 0.024, 0.026), stdev = 0.001
  CI (99.9%): [0.023, 0.026] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 64)

# Run progress: 54.55% complete, ETA 00:02:40
# Fork: 1 of 3
# Warmup Iteration   1: 0.181 ms/op
# Warmup Iteration   2: 0.182 ms/op
# Warmup Iteration   3: 0.182 ms/op
# Warmup Iteration   4: 0.181 ms/op
# Warmup Iteration   5: 0.185 ms/op
Iteration   1: 0.181 ms/op
Iteration   2: 0.181 ms/op
Iteration   3: 0.181 ms/op
Iteration   4: 0.181 ms/op
Iteration   5: 0.180 ms/op

# Run progress: 57.58% complete, ETA 00:02:29
# Fork: 2 of 3
# Warmup Iteration   1: 0.176 ms/op
# Warmup Iteration   2: 0.181 ms/op
# Warmup Iteration   3: 0.181 ms/op
# Warmup Iteration   4: 0.181 ms/op
# Warmup Iteration   5: 0.181 ms/op
Iteration   1: 0.182 ms/op
Iteration   2: 0.184 ms/op
Iteration   3: 0.183 ms/op
Iteration   4: 0.184 ms/op
Iteration   5: 0.181 ms/op

# Run progress: 60.61% complete, ETA 00:02:19
# Fork: 3 of 3
# Warmup Iteration   1: 0.176 ms/op
# Warmup Iteration   2: 0.181 ms/op
# Warmup Iteration   3: 0.182 ms/op
# Warmup Iteration   4: 0.182 ms/op
# Warmup Iteration   5: 0.184 ms/op
Iteration   1: 0.183 ms/op
Iteration   2: 0.181 ms/op
Iteration   3: 0.181 ms/op
Iteration   4: 0.181 ms/op
Iteration   5: 0.182 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  0.182 ±(99.9%) 0.001 ms/op [Average]
  (min, avg, max) = (0.180, 0.182, 0.184), stdev = 0.001
  CI (99.9%): [0.180, 0.183] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 128)

# Run progress: 63.64% complete, ETA 00:02:08
# Fork: 1 of 3
# Warmup Iteration   1: 1.571 ms/op
# Warmup Iteration   2: 1.432 ms/op
# Warmup Iteration   3: 1.444 ms/op
# Warmup Iteration   4: 1.430 ms/op
# Warmup Iteration   5: 1.431 ms/op
Iteration   1: 1.427 ms/op
Iteration   2: 1.438 ms/op
Iteration   3: 1.449 ms/op
Iteration   4: 1.471 ms/op
Iteration   5: 1.484 ms/op

# Run progress: 66.67% complete, ETA 00:01:57
# Fork: 2 of 3
# Warmup Iteration   1: 1.584 ms/op
# Warmup Iteration   2: 1.429 ms/op
# Warmup Iteration   3: 1.433 ms/op
# Warmup Iteration   4: 1.437 ms/op
# Warmup Iteration   5: 1.429 ms/op
Iteration   1: 1.428 ms/op
Iteration   2: 1.430 ms/op
Iteration   3: 1.444 ms/op
Iteration   4: 1.466 ms/op
Iteration   5: 1.472 ms/op

# Run progress: 69.70% complete, ETA 00:01:47
# Fork: 3 of 3
# Warmup Iteration   1: 1.571 ms/op
# Warmup Iteration   2: 1.427 ms/op
# Warmup Iteration   3: 1.435 ms/op
# Warmup Iteration   4: 1.438 ms/op
# Warmup Iteration   5: 1.431 ms/op
Iteration   1: 1.426 ms/op
Iteration   2: 1.432 ms/op
Iteration   3: 1.435 ms/op
Iteration   4: 1.458 ms/op
Iteration   5: 1.479 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  1.449 ±(99.9%) 0.022 ms/op [Average]
  (min, avg, max) = (1.426, 1.449, 1.484), stdev = 0.021
  CI (99.9%): [1.427, 1.471] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 256)

# Run progress: 72.73% complete, ETA 00:01:36
# Fork: 1 of 3
# Warmup Iteration   1: 14.811 ms/op
# Warmup Iteration   2: 14.148 ms/op
# Warmup Iteration   3: 13.660 ms/op
# Warmup Iteration   4: 13.832 ms/op
# Warmup Iteration   5: 14.149 ms/op
Iteration   1: 13.762 ms/op
Iteration   2: 20.490 ms/op
Iteration   3: 18.984 ms/op
Iteration   4: 17.722 ms/op
Iteration   5: 18.336 ms/op

# Run progress: 75.76% complete, ETA 00:01:25
# Fork: 2 of 3
# Warmup Iteration   1: 25.135 ms/op
# Warmup Iteration   2: 18.511 ms/op
# Warmup Iteration   3: 17.850 ms/op
# Warmup Iteration   4: 20.018 ms/op
# Warmup Iteration   5: 18.645 ms/op
Iteration   1: 14.072 ms/op
Iteration   2: 14.464 ms/op
Iteration   3: 13.414 ms/op
Iteration   4: 13.862 ms/op
Iteration   5: 14.295 ms/op

# Run progress: 78.79% complete, ETA 00:01:15
# Fork: 3 of 3
# Warmup Iteration   1: 15.351 ms/op
# Warmup Iteration   2: 13.763 ms/op
# Warmup Iteration   3: 13.632 ms/op
# Warmup Iteration   4: 13.498 ms/op
# Warmup Iteration   5: 14.336 ms/op
Iteration   1: 18.070 ms/op
Iteration   2: 15.460 ms/op
Iteration   3: 15.602 ms/op
Iteration   4: 13.718 ms/op
Iteration   5: 13.366 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  15.708 ±(99.9%) 2.529 ms/op [Average]
  (min, avg, max) = (13.366, 15.708, 20.490), stdev = 2.365
  CI (99.9%): [13.179, 18.237] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 512)

# Run progress: 81.82% complete, ETA 00:01:04
# Fork: 1 of 3
# Warmup Iteration   1: 340.804 ms/op
# Warmup Iteration   2: 159.272 ms/op
# Warmup Iteration   3: 158.215 ms/op
# Warmup Iteration   4: 176.810 ms/op
# Warmup Iteration   5: 192.454 ms/op
Iteration   1: 193.361 ms/op
Iteration   2: 209.477 ms/op
Iteration   3: 213.383 ms/op
Iteration   4: 278.890 ms/op
Iteration   5: 190.147 ms/op

# Run progress: 84.85% complete, ETA 00:00:53
# Fork: 2 of 3
# Warmup Iteration   1: 346.457 ms/op
# Warmup Iteration   2: 277.150 ms/op
# Warmup Iteration   3: 360.942 ms/op
# Warmup Iteration   4: 343.763 ms/op
# Warmup Iteration   5: 174.689 ms/op
Iteration   1: 200.527 ms/op
Iteration   2: 161.851 ms/op
Iteration   3: 205.627 ms/op
Iteration   4: 178.930 ms/op
Iteration   5: 164.843 ms/op

# Run progress: 87.88% complete, ETA 00:00:43
# Fork: 3 of 3
# Warmup Iteration   1: 278.969 ms/op
# Warmup Iteration   2: 174.903 ms/op
# Warmup Iteration   3: 148.328 ms/op
# Warmup Iteration   4: 149.016 ms/op
# Warmup Iteration   5: 200.351 ms/op
Iteration   1: 202.354 ms/op
Iteration   2: 276.732 ms/op
Iteration   3: 183.991 ms/op
Iteration   4: 212.188 ms/op
Iteration   5: 153.367 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  201.711 ±(99.9%) 38.577 ms/op [Average]
  (min, avg, max) = (153.367, 201.711, 278.890), stdev = 36.085
  CI (99.9%): [163.134, 240.288] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=62342:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 1024)

# Run progress: 90.91% complete, ETA 00:00:32
# Fork: 1 of 3
# Warmup Iteration   1: 5520.250 ms/op
# Warmup Iteration   2: 5512.377 ms/op
# Warmup Iteration   3: 3878.655 ms/op
# Warmup Iteration   4: 3867.543 ms/op
# Warmup Iteration   5: 3865.835 ms/op
Iteration   1: 3892.099 ms/op
Iteration   2: 4278.408 ms/op
Iteration   3: 4009.252 ms/op
Iteration   4: 3867.847 ms/op
Iteration   5: 3991.224 ms/op

# Run progress: 93.94% complete, ETA 00:00:23
# Fork: 2 of 3
# Warmup Iteration   1: 5331.857 ms/op
# Warmup Iteration   2: 5434.995 ms/op
# Warmup Iteration   3: 3875.853 ms/op
# Warmup Iteration   4: 3731.800 ms/op
# Warmup Iteration   5: 3680.051 ms/op
Iteration   1: 3584.465 ms/op
Iteration   2: 3567.636 ms/op
Iteration   3: 3532.940 ms/op
Iteration   4: 3653.424 ms/op
Iteration   5: 3535.419 ms/op

# Run progress: 96.97% complete, ETA 00:00:12
# Fork: 3 of 3
# Warmup Iteration   1: 5421.633 ms/op
# Warmup Iteration   2: 5305.820 ms/op
# Warmup Iteration   3: 3914.568 ms/op
# Warmup Iteration   4: 3882.943 ms/op
# Warmup Iteration   5: 3898.750 ms/op
Iteration   1: 3860.211 ms/op
Iteration   2: 3863.800 ms/op
Iteration   3: 3967.823 ms/op
Iteration   4: 4082.433 ms/op
Iteration   5: 4100.302 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  3852.485 ±(99.9%) 247.449 ms/op [Average]
  (min, avg, max) = (3532.940, 3852.485, 4278.408), stdev = 231.464
  CI (99.9%): [3605.036, 4099.935] (assumes normal distribution)


"C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=60733:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin" -Dfile.encoding=UTF-8 -classpath C:\Users\Eduardo\Desktop\GCID\4º\BigData\Benchmarking\Java\jmh-project\target\test-classes;C:\Users\Eduardo\Desktop\GCID\4º\BigData\Benchmarking\Java\jmh-project\target\classes;C:\Users\Eduardo\.m2\repository\org\openjdk\jmh\jmh-core\1.35\jmh-core-1.35.jar;C:\Users\Eduardo\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Eduardo\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\Eduardo\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.35\jmh-generator-annprocess-1.35.jar org.openjdk.jmh.Main "org.example.MatrixMultiplicationBenchmarking.*"
# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=60733:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 2048)

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 3
# Warmup Iteration   1: 82529.217 ms/op
# Warmup Iteration   2: 82357.631 ms/op
# Warmup Iteration   3: 82379.554 ms/op
# Warmup Iteration   4: 82216.896 ms/op
# Warmup Iteration   5: 82210.902 ms/op
Iteration   1: 82259.899 ms/op
Iteration   2: 82273.346 ms/op
Iteration   3: 82331.126 ms/op
Iteration   4: 80944.635 ms/op
Iteration   5: 81040.855 ms/op

# Run progress: 11.11% complete, ETA 01:49:31
# Fork: 2 of 3
# Warmup Iteration   1: 82687.490 ms/op
# Warmup Iteration   2: 82669.180 ms/op
# Warmup Iteration   3: 82401.589 ms/op
# Warmup Iteration   4: 82243.618 ms/op
# Warmup Iteration   5: 82262.779 ms/op
Iteration   1: 82242.815 ms/op
Iteration   2: 82237.856 ms/op
Iteration   3: 82262.777 ms/op
Iteration   4: 80993.798 ms/op
Iteration   5: 80998.102 ms/op

# Run progress: 22.22% complete, ETA 01:35:51
# Fork: 3 of 3
# Warmup Iteration   1: 83078.994 ms/op
# Warmup Iteration   2: 82323.892 ms/op
# Warmup Iteration   3: 81021.154 ms/op
# Warmup Iteration   4: 81127.165 ms/op
# Warmup Iteration   5: 81055.014 ms/op
Iteration   1: 81029.299 ms/op
Iteration   2: 81048.012 ms/op
Iteration   3: 81011.613 ms/op
Iteration   4: 81117.555 ms/op
Iteration   5: 80979.368 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  81518.070 ±(99.9%) 679.055 ms/op [Average]
  (min, avg, max) = (80944.635, 81518.070, 82331.126), stdev = 635.188
  CI (99.9%): [80839.015, 82197.125] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=60733:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 4096)

# Run progress: 33.33% complete, ETA 01:21:55
# Fork: 1 of 3
# Warmup Iteration   1: 790493.945 ms/op
# Warmup Iteration   2: 792277.062 ms/op
# Warmup Iteration   3: 792608.164 ms/op
# Warmup Iteration   4: 790680.330 ms/op
# Warmup Iteration   5: 790461.347 ms/op
Iteration   1: 790715.249 ms/op
Iteration   2: 789747.546 ms/op
Iteration   3: 791801.761 ms/op
Iteration   4: 750913.643 ms/op
Iteration   5: 748850.222 ms/op

# Run progress: 44.44% complete, ETA 03:34:19
# Fork: 2 of 3
# Warmup Iteration   1: 794256.978 ms/op
# Warmup Iteration   2: 795232.034 ms/op
# Warmup Iteration   3: 794256.894 ms/op
# Warmup Iteration   4: 794238.109 ms/op
# Warmup Iteration   5: 794370.607 ms/op
Iteration   1: 794092.403 ms/op
Iteration   2: 794374.419 ms/op
Iteration   3: 793267.821 ms/op
Iteration   4: 755056.792 ms/op
Iteration   5: 754985.209 ms/op

# Run progress: 55.56% complete, ETA 04:02:02
# Fork: 3 of 3
# Warmup Iteration   1: 792590.741 ms/op
# Warmup Iteration   2: 794251.161 ms/op
# Warmup Iteration   3: 792813.497 ms/op
# Warmup Iteration   4: 789864.942 ms/op
# Warmup Iteration   5: 791686.738 ms/op
Iteration   1: 791899.398 ms/op
Iteration   2: 791902.771 ms/op
Iteration   3: 792945.804 ms/op
Iteration   4: 773179.792 ms/op
Iteration   5: 753896.193 ms/op


Result "org.example.MatrixMultiplicationBenchmarking.multiplication":
  777841.935 ±(99.9%) 20411.434 ms/op [Average]
  (min, avg, max) = (748850.222, 777841.935, 794374.419), stdev = 19092.868
  CI (99.9%): [757430.501, 798253.369] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 11.0.16.1, Java HotSpot(TM) 64-Bit Server VM, 11.0.16.1+1-LTS-1
# VM invoker: C:\Program Files\Java\jdk-11.0.16.1\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=60733:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: full + dont-inline hint (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.MatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 8198)

# Run progress: 66.67% complete, ETA 03:36:49
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at org.example.MatrixMultiplication.execute(MatrixMultiplication.java:8)
	at org.example.MatrixMultiplicationBenchmarking.multiplication(MatrixMultiplicationBenchmarking.java:42)
	at org.example.jmh_generated.MatrixMultiplicationBenchmarking_multiplication_jmhTest.multiplication_avgt_jmhStub(MatrixMultiplicationBenchmarking_multiplication_jmhTest.java:191)
	at org.example.jmh_generated.MatrixMultiplicationBenchmarking_multiplication_jmhTest.multiplication_AverageTime(MatrixMultiplicationBenchmarking_multiplication_jmhTest.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)



# Run progress: 77.78% complete, ETA 02:03:55
# Fork: 2 of 3
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at org.example.MatrixMultiplication.execute(MatrixMultiplication.java:8)
	at org.example.MatrixMultiplicationBenchmarking.multiplication(MatrixMultiplicationBenchmarking.java:42)
	at org.example.jmh_generated.MatrixMultiplicationBenchmarking_multiplication_jmhTest.multiplication_avgt_jmhStub(MatrixMultiplicationBenchmarking_multiplication_jmhTest.java:191)
	at org.example.jmh_generated.MatrixMultiplicationBenchmarking_multiplication_jmhTest.multiplication_AverageTime(MatrixMultiplicationBenchmarking_multiplication_jmhTest.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)



# Run progress: 88.89% complete, ETA 00:54:13
# Fork: 3 of 3
# Warmup Iteration   1: <failure>

java.lang.OutOfMemoryError: Java heap space
	at org.example.MatrixMultiplication.execute(MatrixMultiplication.java:8)
	at org.example.MatrixMultiplicationBenchmarking.multiplication(MatrixMultiplicationBenchmarking.java:42)
	at org.example.jmh_generated.MatrixMultiplicationBenchmarking_multiplication_jmhTest.multiplication_avgt_jmhStub(MatrixMultiplicationBenchmarking_multiplication_jmhTest.java:191)
	at org.example.jmh_generated.MatrixMultiplicationBenchmarking_multiplication_jmhTest.multiplication_AverageTime(MatrixMultiplicationBenchmarking_multiplication_jmhTest.java:154)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)




# Run complete. Total time: 07:13:48

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         (n)  Mode  Cnt       Score       Error  Units
MatrixMultiplicationBenchmarking.multiplication     1  avgt   15    ≈ 10⁻⁴            ms/op
MatrixMultiplicationBenchmarking.multiplication     2  avgt   15    ≈ 10⁻⁴            ms/op
MatrixMultiplicationBenchmarking.multiplication     4  avgt   15    ≈ 10⁻⁴            ms/op
MatrixMultiplicationBenchmarking.multiplication     8  avgt   15     0.001 ±   0.001  ms/op
MatrixMultiplicationBenchmarking.multiplication    16  avgt   15     0.004 ±   0.001  ms/op
MatrixMultiplicationBenchmarking.multiplication    32  avgt   15     0.024 ±   0.002  ms/op
MatrixMultiplicationBenchmarking.multiplication    64  avgt   15     0.182 ±   0.001  ms/op
MatrixMultiplicationBenchmarking.multiplication   128  avgt   15     1.449 ±   0.022  ms/op
MatrixMultiplicationBenchmarking.multiplication   256  avgt   15    15.708 ±   2.529  ms/op
MatrixMultiplicationBenchmarking.multiplication   512  avgt   15   201.711 ±  38.577  ms/op
MatrixMultiplicationBenchmarking.multiplication  1024  avgt   15  3852.485 ± 247.449  ms/op
MatrixMultiplicationBenchmarking.multiplication  2048  avgt   15   81518.070 ±   679.055  ms/op
MatrixMultiplicationBenchmarking.multiplication  4096  avgt   15  777841.935 ± 20411.434  ms/op