"C:\Program Files\Java\jdk-17\bin\java.exe" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Users\Eduardo\Desktop\GCID\4º\BigData\Benchmarking_3\Individual Assignment\code\vectorized-matrix-multiplication\target\test-classes;C:\Users\Eduardo\Desktop\GCID\4º\BigData\Benchmarking_3\Individual Assignment\code\vectorized-matrix-multiplication\target\classes;C:\Users\Eduardo\.m2\repository\org\openjdk\jmh\jmh-core\1.35\jmh-core-1.35.jar;C:\Users\Eduardo\.m2\repository\net\sf\jopt-simple\jopt-simple\5.0.4\jopt-simple-5.0.4.jar;C:\Users\Eduardo\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\Eduardo\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.35\jmh-generator-annprocess-1.35.jar" org.openjdk.jmh.Main org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication$
# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 1)

# Run progress: 0,00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 3,03% complete, ETA 00:05:45
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op

# Run progress: 6,06% complete, ETA 00:05:33
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ms/op
# Warmup Iteration   2: ≈ 10⁻⁴ ms/op
# Warmup Iteration   3: ≈ 10⁻⁴ ms/op
# Warmup Iteration   4: ≈ 10⁻⁴ ms/op
# Warmup Iteration   5: ≈ 10⁻⁴ ms/op
Iteration   1: ≈ 10⁻⁴ ms/op
Iteration   2: ≈ 10⁻⁴ ms/op
Iteration   3: ≈ 10⁻⁴ ms/op
Iteration   4: ≈ 10⁻⁴ ms/op
Iteration   5: ≈ 10⁻⁴ ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  ≈ 10⁻⁴ ms/op


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 2)

# Run progress: 9,09% complete, ETA 00:05:21
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻³ ms/op
# Warmup Iteration   2: ≈ 10⁻³ ms/op
# Warmup Iteration   3: ≈ 10⁻³ ms/op
# Warmup Iteration   4: ≈ 10⁻³ ms/op
# Warmup Iteration   5: ≈ 10⁻³ ms/op
Iteration   1: ≈ 10⁻³ ms/op
Iteration   2: ≈ 10⁻³ ms/op
Iteration   3: ≈ 10⁻³ ms/op
Iteration   4: ≈ 10⁻³ ms/op
Iteration   5: ≈ 10⁻³ ms/op

# Run progress: 12,12% complete, ETA 00:05:10
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻³ ms/op
# Warmup Iteration   2: ≈ 10⁻³ ms/op
# Warmup Iteration   3: ≈ 10⁻³ ms/op
# Warmup Iteration   4: ≈ 10⁻³ ms/op
# Warmup Iteration   5: ≈ 10⁻³ ms/op
Iteration   1: ≈ 10⁻³ ms/op
Iteration   2: ≈ 10⁻³ ms/op
Iteration   3: ≈ 10⁻³ ms/op
Iteration   4: ≈ 10⁻³ ms/op
Iteration   5: ≈ 10⁻³ ms/op

# Run progress: 15,15% complete, ETA 00:04:59
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻³ ms/op
# Warmup Iteration   2: ≈ 10⁻³ ms/op
# Warmup Iteration   3: ≈ 10⁻³ ms/op
# Warmup Iteration   4: ≈ 10⁻³ ms/op
# Warmup Iteration   5: ≈ 10⁻³ ms/op
Iteration   1: ≈ 10⁻³ ms/op
Iteration   2: ≈ 10⁻³ ms/op
Iteration   3: ≈ 10⁻³ ms/op
Iteration   4: ≈ 10⁻³ ms/op
Iteration   5: ≈ 10⁻³ ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  ≈ 10⁻³ ms/op


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 4)

# Run progress: 18,18% complete, ETA 00:04:48
# Fork: 1 of 3
# Warmup Iteration   1: 0,001 ms/op
# Warmup Iteration   2: 0,001 ms/op
# Warmup Iteration   3: 0,001 ms/op
# Warmup Iteration   4: 0,001 ms/op
# Warmup Iteration   5: 0,001 ms/op
Iteration   1: 0,001 ms/op
Iteration   2: 0,001 ms/op
Iteration   3: 0,001 ms/op
Iteration   4: 0,001 ms/op
Iteration   5: 0,001 ms/op

# Run progress: 21,21% complete, ETA 00:04:38
# Fork: 2 of 3
# Warmup Iteration   1: 0,001 ms/op
# Warmup Iteration   2: 0,001 ms/op
# Warmup Iteration   3: 0,001 ms/op
# Warmup Iteration   4: 0,001 ms/op
# Warmup Iteration   5: 0,001 ms/op
Iteration   1: 0,001 ms/op
Iteration   2: 0,001 ms/op
Iteration   3: 0,001 ms/op
Iteration   4: 0,001 ms/op
Iteration   5: 0,001 ms/op

# Run progress: 24,24% complete, ETA 00:04:27
# Fork: 3 of 3
# Warmup Iteration   1: 0,001 ms/op
# Warmup Iteration   2: 0,001 ms/op
# Warmup Iteration   3: 0,001 ms/op
# Warmup Iteration   4: 0,001 ms/op
# Warmup Iteration   5: 0,001 ms/op
Iteration   1: 0,001 ms/op
Iteration   2: 0,001 ms/op
Iteration   3: 0,001 ms/op
Iteration   4: 0,001 ms/op
Iteration   5: 0,001 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  0,001 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,001, 0,001, 0,001), stdev = 0,001
  CI (99.9%): [0,001, 0,001] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 8)

# Run progress: 27,27% complete, ETA 00:04:16
# Fork: 1 of 3
# Warmup Iteration   1: 0,004 ms/op
# Warmup Iteration   2: 0,004 ms/op
# Warmup Iteration   3: 0,004 ms/op
# Warmup Iteration   4: 0,004 ms/op
# Warmup Iteration   5: 0,004 ms/op
Iteration   1: 0,004 ms/op
Iteration   2: 0,004 ms/op
Iteration   3: 0,004 ms/op
Iteration   4: 0,004 ms/op
Iteration   5: 0,004 ms/op

# Run progress: 30,30% complete, ETA 00:04:05
# Fork: 2 of 3
# Warmup Iteration   1: 0,004 ms/op
# Warmup Iteration   2: 0,004 ms/op
# Warmup Iteration   3: 0,004 ms/op
# Warmup Iteration   4: 0,004 ms/op
# Warmup Iteration   5: 0,004 ms/op
Iteration   1: 0,004 ms/op
Iteration   2: 0,004 ms/op
Iteration   3: 0,004 ms/op
Iteration   4: 0,004 ms/op
Iteration   5: 0,004 ms/op

# Run progress: 33,33% complete, ETA 00:03:55
# Fork: 3 of 3
# Warmup Iteration   1: 0,004 ms/op
# Warmup Iteration   2: 0,004 ms/op
# Warmup Iteration   3: 0,004 ms/op
# Warmup Iteration   4: 0,004 ms/op
# Warmup Iteration   5: 0,004 ms/op
Iteration   1: 0,004 ms/op
Iteration   2: 0,004 ms/op
Iteration   3: 0,004 ms/op
Iteration   4: 0,004 ms/op
Iteration   5: 0,004 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  0,004 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,004, 0,004, 0,004), stdev = 0,001
  CI (99.9%): [0,004, 0,004] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 16)

# Run progress: 36,36% complete, ETA 00:03:44
# Fork: 1 of 3
# Warmup Iteration   1: 0,026 ms/op
# Warmup Iteration   2: 0,024 ms/op
# Warmup Iteration   3: 0,024 ms/op
# Warmup Iteration   4: 0,024 ms/op
# Warmup Iteration   5: 0,024 ms/op
Iteration   1: 0,024 ms/op
Iteration   2: 0,024 ms/op
Iteration   3: 0,024 ms/op
Iteration   4: 0,024 ms/op
Iteration   5: 0,024 ms/op

# Run progress: 39,39% complete, ETA 00:03:33
# Fork: 2 of 3
# Warmup Iteration   1: 0,026 ms/op
# Warmup Iteration   2: 0,024 ms/op
# Warmup Iteration   3: 0,024 ms/op
# Warmup Iteration   4: 0,024 ms/op
# Warmup Iteration   5: 0,024 ms/op
Iteration   1: 0,024 ms/op
Iteration   2: 0,024 ms/op
Iteration   3: 0,024 ms/op
Iteration   4: 0,024 ms/op
Iteration   5: 0,024 ms/op

# Run progress: 42,42% complete, ETA 00:03:23
# Fork: 3 of 3
# Warmup Iteration   1: 0,026 ms/op
# Warmup Iteration   2: 0,024 ms/op
# Warmup Iteration   3: 0,024 ms/op
# Warmup Iteration   4: 0,024 ms/op
# Warmup Iteration   5: 0,024 ms/op
Iteration   1: 0,024 ms/op
Iteration   2: 0,024 ms/op
Iteration   3: 0,024 ms/op
Iteration   4: 0,024 ms/op
Iteration   5: 0,024 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  0,024 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,024, 0,024, 0,024), stdev = 0,001
  CI (99.9%): [0,024, 0,024] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 32)

# Run progress: 45,45% complete, ETA 00:03:12
# Fork: 1 of 3
# Warmup Iteration   1: 0,187 ms/op
# Warmup Iteration   2: 0,169 ms/op
# Warmup Iteration   3: 0,169 ms/op
# Warmup Iteration   4: 0,169 ms/op
# Warmup Iteration   5: 0,169 ms/op
Iteration   1: 0,169 ms/op
Iteration   2: 0,169 ms/op
Iteration   3: 0,168 ms/op
Iteration   4: 0,168 ms/op
Iteration   5: 0,169 ms/op

# Run progress: 48,48% complete, ETA 00:03:01
# Fork: 2 of 3
# Warmup Iteration   1: 0,184 ms/op
# Warmup Iteration   2: 0,168 ms/op
# Warmup Iteration   3: 0,168 ms/op
# Warmup Iteration   4: 0,168 ms/op
# Warmup Iteration   5: 0,168 ms/op
Iteration   1: 0,168 ms/op
Iteration   2: 0,168 ms/op
Iteration   3: 0,168 ms/op
Iteration   4: 0,168 ms/op
Iteration   5: 0,168 ms/op

# Run progress: 51,52% complete, ETA 00:02:51
# Fork: 3 of 3
# Warmup Iteration   1: 0,186 ms/op
# Warmup Iteration   2: 0,169 ms/op
# Warmup Iteration   3: 0,168 ms/op
# Warmup Iteration   4: 0,168 ms/op
# Warmup Iteration   5: 0,168 ms/op
Iteration   1: 0,168 ms/op
Iteration   2: 0,168 ms/op
Iteration   3: 0,168 ms/op
Iteration   4: 0,168 ms/op
Iteration   5: 0,168 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  0,168 ±(99.9%) 0,001 ms/op [Average]
  (min, avg, max) = (0,168, 0,168, 0,169), stdev = 0,001
  CI (99.9%): [0,168, 0,169] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 64)

# Run progress: 54,55% complete, ETA 00:02:40
# Fork: 1 of 3
# Warmup Iteration   1: 1,495 ms/op
# Warmup Iteration   2: 1,345 ms/op
# Warmup Iteration   3: 1,341 ms/op
# Warmup Iteration   4: 1,340 ms/op
# Warmup Iteration   5: 1,341 ms/op
Iteration   1: 1,344 ms/op
Iteration   2: 1,344 ms/op
Iteration   3: 1,344 ms/op
Iteration   4: 1,344 ms/op
Iteration   5: 1,345 ms/op

# Run progress: 57,58% complete, ETA 00:02:29
# Fork: 2 of 3
# Warmup Iteration   1: 1,506 ms/op
# Warmup Iteration   2: 1,363 ms/op
# Warmup Iteration   3: 1,372 ms/op
# Warmup Iteration   4: 1,365 ms/op
# Warmup Iteration   5: 1,363 ms/op
Iteration   1: 1,360 ms/op
Iteration   2: 1,362 ms/op
Iteration   3: 1,366 ms/op
Iteration   4: 1,369 ms/op
Iteration   5: 1,369 ms/op

# Run progress: 60,61% complete, ETA 00:02:18
# Fork: 3 of 3
# Warmup Iteration   1: 1,488 ms/op
# Warmup Iteration   2: 1,375 ms/op
# Warmup Iteration   3: 1,368 ms/op
# Warmup Iteration   4: 1,365 ms/op
# Warmup Iteration   5: 1,363 ms/op
Iteration   1: 1,364 ms/op
Iteration   2: 1,351 ms/op
Iteration   3: 1,359 ms/op
Iteration   4: 1,371 ms/op
Iteration   5: 1,371 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  1,358 ±(99.9%) 0,012 ms/op [Average]
  (min, avg, max) = (1,344, 1,358, 1,371), stdev = 0,011
  CI (99.9%): [1,346, 1,369] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 128)

# Run progress: 63,64% complete, ETA 00:02:08
# Fork: 1 of 3
# Warmup Iteration   1: 11,599 ms/op
# Warmup Iteration   2: 10,479 ms/op
# Warmup Iteration   3: 10,442 ms/op
# Warmup Iteration   4: 10,488 ms/op
# Warmup Iteration   5: 10,449 ms/op
Iteration   1: 10,463 ms/op
Iteration   2: 10,448 ms/op
Iteration   3: 10,496 ms/op
Iteration   4: 10,445 ms/op
Iteration   5: 10,473 ms/op

# Run progress: 66,67% complete, ETA 00:01:57
# Fork: 2 of 3
# Warmup Iteration   1: 11,515 ms/op
# Warmup Iteration   2: 10,574 ms/op
# Warmup Iteration   3: 10,910 ms/op
# Warmup Iteration   4: 10,656 ms/op
# Warmup Iteration   5: 10,683 ms/op
Iteration   1: 10,734 ms/op
Iteration   2: 10,652 ms/op
Iteration   3: 10,565 ms/op
Iteration   4: 10,519 ms/op
Iteration   5: 10,535 ms/op

# Run progress: 69,70% complete, ETA 00:01:46
# Fork: 3 of 3
# Warmup Iteration   1: 11,570 ms/op
# Warmup Iteration   2: 10,560 ms/op
# Warmup Iteration   3: 10,516 ms/op
# Warmup Iteration   4: 10,521 ms/op
# Warmup Iteration   5: 10,512 ms/op
Iteration   1: 10,520 ms/op
Iteration   2: 10,529 ms/op
Iteration   3: 10,521 ms/op
Iteration   4: 10,538 ms/op
Iteration   5: 10,525 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  10,531 ±(99.9%) 0,081 ms/op [Average]
  (min, avg, max) = (10,445, 10,531, 10,734), stdev = 0,076
  CI (99.9%): [10,450, 10,612] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 256)

# Run progress: 72,73% complete, ETA 00:01:36
# Fork: 1 of 3
# Warmup Iteration   1: 94,347 ms/op
# Warmup Iteration   2: 89,760 ms/op
# Warmup Iteration   3: 89,244 ms/op
# Warmup Iteration   4: 88,847 ms/op
# Warmup Iteration   5: 89,245 ms/op
Iteration   1: 88,896 ms/op
Iteration   2: 88,729 ms/op
Iteration   3: 88,824 ms/op
Iteration   4: 88,859 ms/op
Iteration   5: 88,831 ms/op

# Run progress: 75,76% complete, ETA 00:01:25
# Fork: 2 of 3
# Warmup Iteration   1: 93,726 ms/op
# Warmup Iteration   2: 89,576 ms/op
# Warmup Iteration   3: 89,383 ms/op
# Warmup Iteration   4: 89,212 ms/op
# Warmup Iteration   5: 89,374 ms/op
Iteration   1: 89,437 ms/op
Iteration   2: 89,469 ms/op
Iteration   3: 89,310 ms/op
Iteration   4: 89,377 ms/op
Iteration   5: 89,931 ms/op

# Run progress: 78,79% complete, ETA 00:01:15
# Fork: 3 of 3
# Warmup Iteration   1: 93,758 ms/op
# Warmup Iteration   2: 90,124 ms/op
# Warmup Iteration   3: 88,880 ms/op
# Warmup Iteration   4: 89,056 ms/op
# Warmup Iteration   5: 88,927 ms/op
Iteration   1: 88,814 ms/op
Iteration   2: 88,963 ms/op
Iteration   3: 88,835 ms/op
Iteration   4: 88,932 ms/op
Iteration   5: 88,884 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  89,073 ±(99.9%) 0,371 ms/op [Average]
  (min, avg, max) = (88,729, 89,073, 89,931), stdev = 0,347
  CI (99.9%): [88,702, 89,443] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 512)

# Run progress: 81,82% complete, ETA 00:01:04
# Fork: 1 of 3
# Warmup Iteration   1: 1082,350 ms/op
# Warmup Iteration   2: 873,181 ms/op
# Warmup Iteration   3: 857,214 ms/op
# Warmup Iteration   4: 848,477 ms/op
# Warmup Iteration   5: 841,488 ms/op
Iteration   1: 853,939 ms/op
Iteration   2: 857,913 ms/op
Iteration   3: 850,017 ms/op
Iteration   4: 841,661 ms/op
Iteration   5: 855,469 ms/op

# Run progress: 84,85% complete, ETA 00:00:54
# Fork: 2 of 3
# Warmup Iteration   1: 1114,309 ms/op
# Warmup Iteration   2: 861,512 ms/op
# Warmup Iteration   3: 829,674 ms/op
# Warmup Iteration   4: 841,740 ms/op
# Warmup Iteration   5: 873,266 ms/op
Iteration   1: 865,476 ms/op
Iteration   2: 878,396 ms/op
Iteration   3: 846,894 ms/op
Iteration   4: 850,209 ms/op
Iteration   5: 842,199 ms/op

# Run progress: 87,88% complete, ETA 00:00:44
# Fork: 3 of 3
# Warmup Iteration   1: 1088,137 ms/op
# Warmup Iteration   2: 853,437 ms/op
# Warmup Iteration   3: 847,718 ms/op
# Warmup Iteration   4: 834,600 ms/op
# Warmup Iteration   5: 846,593 ms/op
Iteration   1: 837,725 ms/op
Iteration   2: 865,354 ms/op
Iteration   3: 897,112 ms/op
Iteration   4: 858,614 ms/op
Iteration   5: 925,057 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  861,736 ±(99.9%) 24,813 ms/op [Average]
  (min, avg, max) = (837,725, 861,736, 925,057), stdev = 23,210
  CI (99.9%): [836,923, 886,549] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 17.0.12, Java HotSpot(TM) 64-Bit Server VM, 17.0.12+8-LTS-286
# VM invoker: C:\Program Files\Java\jdk-17\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\lib\idea_rt.jar=52368:C:\Program Files\JetBrains\IntelliJ IDEA 2023.3.2\bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication
# Parameters: (n = 1024)

# Run progress: 90,91% complete, ETA 00:00:34
# Fork: 1 of 3
# Warmup Iteration   1: 9057,989 ms/op
# Warmup Iteration   2: 10394,866 ms/op
# Warmup Iteration   3: 9704,788 ms/op
# Warmup Iteration   4: 9856,417 ms/op
# Warmup Iteration   5: 9605,108 ms/op
Iteration   1: 9714,905 ms/op
Iteration   2: 9596,534 ms/op
Iteration   3: 9723,354 ms/op
Iteration   4: 9835,755 ms/op
Iteration   5: 9557,291 ms/op

# Run progress: 93,94% complete, ETA 00:00:28
# Fork: 2 of 3
# Warmup Iteration   1: 8840,353 ms/op
# Warmup Iteration   2: 9683,074 ms/op
# Warmup Iteration   3: 10530,155 ms/op
# Warmup Iteration   4: 9563,690 ms/op
# Warmup Iteration   5: 9631,510 ms/op
Iteration   1: 9405,612 ms/op
Iteration   2: 9799,613 ms/op
Iteration   3: 10067,871 ms/op
Iteration   4: 9447,713 ms/op
Iteration   5: 9679,412 ms/op

# Run progress: 96,97% complete, ETA 00:00:16
# Fork: 3 of 3
# Warmup Iteration   1: 8894,112 ms/op
# Warmup Iteration   2: 9371,502 ms/op
# Warmup Iteration   3: 10251,305 ms/op
# Warmup Iteration   4: 10565,841 ms/op
# Warmup Iteration   5: 9747,892 ms/op
Iteration   1: 9885,549 ms/op
Iteration   2: 10252,972 ms/op
Iteration   3: 10425,447 ms/op
Iteration   4: 10284,390 ms/op
Iteration   5: 9708,547 ms/op


Result "org.example.VectorizedMatrixMultiplicationBenchmarking.multiplication":
  9825,664 ±(99.9%) 327,948 ms/op [Average]
  (min, avg, max) = (9405,612, 9825,664, 10425,447), stdev = 306,763
  CI (99.9%): [9497,716, 10153,612] (assumes normal distribution)


# Run complete. Total time: 00:10:37

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                   (n)  Mode  Cnt     Score     Error  Units
VectorizedMatrixMultiplicationBenchmarking.multiplication     1  avgt   15    ≈ 10⁻⁴            ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication     2  avgt   15    ≈ 10⁻³            ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication     4  avgt   15     0,001 ±   0,001  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication     8  avgt   15     0,004 ±   0,001  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication    16  avgt   15     0,024 ±   0,001  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication    32  avgt   15     0,168 ±   0,001  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication    64  avgt   15     1,358 ±   0,012  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication   128  avgt   15    10,531 ±   0,081  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication   256  avgt   15    89,073 ±   0,371  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication   512  avgt   15   861,736 ±  24,813  ms/op
VectorizedMatrixMultiplicationBenchmarking.multiplication  1024  avgt   15  9825,664 ± 327,948  ms/op

Process finished with exit code 0
